/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.awt.Dimension;
import java.awt.Toolkit;
import static java.awt.image.ImageObserver.WIDTH;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Zvika
 */
public class Editor extends javax.swing.JFrame {
    private String copyText;
    private void Update_View(){
        //open jframe center screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        //
    }
    public Editor() {
        initComponents();
        Update_View();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("notepad.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        jTextPane = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_File = new javax.swing.JMenu();
        jMenuItem_Open = new javax.swing.JMenuItem();
        jMenuItem_Save = new javax.swing.JMenuItem();
        jMenuItem_Exit = new javax.swing.JMenuItem();
        jMenu_Edit = new javax.swing.JMenu();
        jMenuItem_Copy = new javax.swing.JMenuItem();
        jMenuItem_Paste = new javax.swing.JMenuItem();
        jMenuItem_Cut = new javax.swing.JMenuItem();
        jMenu_Help = new javax.swing.JMenu();
        About = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("My Simple Editor");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                CLOSE2(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                CLOSE1(evt);
            }
        });

        jScrollPane.setViewportView(jTextPane);

        jLabel1.setText(" ");

        jMenu_File.setText("File");

        jMenuItem_Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_Open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/open.png"))); // NOI18N
        jMenuItem_Open.setText("Open");
        jMenuItem_Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_OpenActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_Open);

        jMenuItem_Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_Save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/save.jpg"))); // NOI18N
        jMenuItem_Save.setText("Save");
        jMenuItem_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SaveActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_Save);

        jMenuItem_Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/Exit.png"))); // NOI18N
        jMenuItem_Exit.setText("Exit");
        jMenuItem_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_ExitActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_Exit);

        jMenuBar1.add(jMenu_File);

        jMenu_Edit.setText("Edit");

        jMenuItem_Copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_Copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/copy.png"))); // NOI18N
        jMenuItem_Copy.setText("Copy");
        jMenuItem_Copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CopyActionPerformed(evt);
            }
        });
        jMenu_Edit.add(jMenuItem_Copy);

        jMenuItem_Paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_Paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/Paste.png"))); // NOI18N
        jMenuItem_Paste.setText("Paste");
        jMenuItem_Paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_PasteActionPerformed(evt);
            }
        });
        jMenu_Edit.add(jMenuItem_Paste);

        jMenuItem_Cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_Cut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/cut.png"))); // NOI18N
        jMenuItem_Cut.setText("Cut");
        jMenuItem_Cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CutActionPerformed(evt);
            }
        });
        jMenu_Edit.add(jMenuItem_Cut);

        jMenuBar1.add(jMenu_Edit);

        jMenu_Help.setText("Help");

        About.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        About.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/about.png"))); // NOI18N
        About.setText("About");
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });
        jMenu_Help.add(About);

        jMenuBar1.add(jMenu_Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
        JOptionPane.showMessageDialog(rootPane, "My Simple Editor Product Version 1.0.0\n\nBy Zvika", "My Simple Editor", WIDTH);
    }//GEN-LAST:event_AboutActionPerformed

    private void jMenuItem_CopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CopyActionPerformed
        if (jTextPane.getSelectedText() != null){
            copyText = jTextPane.getSelectedText();
        }
    }//GEN-LAST:event_jMenuItem_CopyActionPerformed

    private void jMenuItem_PasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_PasteActionPerformed
        if (copyText != null){
            String text = jTextPane.getText();
            int i = jTextPane.getCaretPosition();
            
            jTextPane.setText(text.substring(0, i) + copyText + text.substring(i, text.length()));
            jTextPane.setCaretPosition(i + copyText.length());
        }
    }//GEN-LAST:event_jMenuItem_PasteActionPerformed

    private void jMenuItem_CutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CutActionPerformed
        if (jTextPane.getSelectedText() != null){
            String text = jTextPane.getText();
            copyText = jTextPane.getSelectedText();
            
            int start = jTextPane.getSelectionStart();
            int end = jTextPane.getSelectionEnd();
            
            jTextPane.setText(text.substring(0, start) + text.substring(end, text.length()));
            jTextPane.setCaretPosition(start);
        }
    }//GEN-LAST:event_jMenuItem_CutActionPerformed

    private void jMenuItem_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ExitActionPerformed
        int outcome1 = JOptionPane.showConfirmDialog(rootPane, "Do you want to save the file beofre you exit ??", "Exit?", JOptionPane.YES_NO_OPTION);
        if (outcome1 == JOptionPane.YES_OPTION){ // save file
            jMenuItem_SaveActionPerformed(evt);
            System.exit(0);
        }
        else if (outcome1 == JOptionPane.NO_OPTION) System.exit(0); //exit
    }//GEN-LAST:event_jMenuItem_ExitActionPerformed

    private void jMenuItem_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SaveActionPerformed
        String Path = null;
        JFileChooser jfile_chooser = new JFileChooser("txt");
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        
        jfile_chooser.setFileFilter(filter);
        int outcome2 = jfile_chooser.showOpenDialog(this);
        
        if (outcome2 == JFileChooser.APPROVE_OPTION) {
            Path = jfile_chooser.getSelectedFile().getPath();
            
            if (!Path.endsWith(".txt")) {
                Path += ".txt";
            }
            if(Data.sourceData.wtire_String_to_file(Path, jTextPane.getText())){ //is Succeeded
                jLabel1.setText("the File saved in: "+ Path);
            }
            else{
                jLabel1.setText("can't save the file. try anter file.");
            }
        }
        else jLabel1.setText("The file not save - Try again.");      
    }//GEN-LAST:event_jMenuItem_SaveActionPerformed

    private void jMenuItem_OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_OpenActionPerformed
        String Path = null;
        // check if not save file
        int outcome1 = JOptionPane.showConfirmDialog(rootPane, "Do you want to save the file before you open another file ??", "Save the file", JOptionPane.YES_NO_OPTION);
        if (outcome1 == JOptionPane.YES_OPTION)  jMenuItem_SaveActionPerformed(evt); // save file
        else if (outcome1 == JOptionPane.CANCEL_OPTION) return;

        JFileChooser jfile_chooser = new JFileChooser("txt");

        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        jfile_chooser.setFileFilter(filter);
        int outcome2 = jfile_chooser.showOpenDialog(this);

        if (outcome2 == JFileChooser.APPROVE_OPTION) {
            Path = jfile_chooser.getSelectedFile().getPath();
            jLabel1.setText("File open from: "+ Path);
            String text = Data.sourceData.read_file_to_String(Path);
            jTextPane.setText(text);
        }
        else jLabel1.setText("The file not open - Try again");
    }//GEN-LAST:event_jMenuItem_OpenActionPerformed

    private void CLOSE2(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_CLOSE2
        jMenuItem_ExitActionPerformed(null);
    }//GEN-LAST:event_CLOSE2

    private void CLOSE1(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_CLOSE1
        jMenuItem_ExitActionPerformed(null);
    }//GEN-LAST:event_CLOSE1

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem About;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_Copy;
    private javax.swing.JMenuItem jMenuItem_Cut;
    private javax.swing.JMenuItem jMenuItem_Exit;
    private javax.swing.JMenuItem jMenuItem_Open;
    private javax.swing.JMenuItem jMenuItem_Paste;
    private javax.swing.JMenuItem jMenuItem_Save;
    private javax.swing.JMenu jMenu_Edit;
    private javax.swing.JMenu jMenu_File;
    private javax.swing.JMenu jMenu_Help;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTextPane jTextPane;
    // End of variables declaration//GEN-END:variables
}
